name: Go CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'telemetry/**'
      - '.github/workflows/go.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'telemetry/**'
      - '.github/workflows/go.yml'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./telemetry

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true

    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Build
      run: go build -v ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./telemetry/coverage.txt
        flags: telemetry
        name: codecov-umbrella

  golangci:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./telemetry

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: telemetry
        args: --timeout=5m

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./telemetry

    steps:
    - uses: actions/checkout@v3

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...
        working-directory: telemetry 